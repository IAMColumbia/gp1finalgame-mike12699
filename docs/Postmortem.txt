Postmortem Documentation

-For the final project, I attempted to use the MonoGameLibrary dependency but ended up not using it since most of the base coding works as is. There is some separation of concern in my classes. Most of the base coding, which is primarily the alien, spaceship, and projectile placement and controls, are in the PlayerInput class. I attempted to do some separation of concern to organize the aliens, spaceship, and projectiles to be in their own class. It got so far that the only issue I came across was that the projectile would not collide with the alien sprite and get rid of it on contact. Therefore, most of the working code falls in the PlayerInput class while the ScoreManager, Timer, and Background classes all have their ways to display the actions done while playing. In terms of maintaining the code, it's simple to add more aliens on screen by tampering with the alien array. It's possible to add more rows and columns for the aliens to display on screen. It's also simple to change the alien's speed as well as how far down they can go when they reach the right end of the screen. Overall, the game isn't all that finished. Although it does have a win/lose state, a restart state, and keeps track of the score, I initially wanted to add more levels into this game. However, I came across many issues regarding how to do that, so I ultimately kept it at one level. With the limited amount of resources that I had, at least the game is functional and turned out the way I envisioned it. If I did have enough resources and time for myself, I would've added more fun mechanics such as power ups and enemies trying to shoot back at you. If I started the project over, I probably would've used Unity as the base program since I think I can find more variety there and have the coding be less complex than the one I have currently.